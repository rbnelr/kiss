// iv3.hpp generated by vector_srcgen.py
#pragma once

#include "kissmath.hpp"

// forward declarations for conversion operators
union fv3;
union dv3;

union iv3 {
	struct {
		int	x, y, z;
	};
	int		arr[3];

	inline int& operator[] (int i) {
		return arr[i];
	}

	inline iv3 () {
	
	}

	inline constexpr iv3 (int all): x{all}, y{all}, z{all} {
	
	}

	inline constexpr iv3 (int x, int y, int z): x{x}, y{y}, z{z} {
	
	}

	inline iv3 operator+= (iv3 r) {
		x += r.x;
		y += r.y;
		z += r.z;
		return *this;
	}
	inline iv3 operator-= (iv3 r) {
		x -= r.x;
		y -= r.y;
		z -= r.z;
		return *this;
	}
	inline iv3 operator*= (iv3 r) {
		x *= r.x;
		y *= r.y;
		z *= r.z;
		return *this;
	}
	inline iv3 operator/= (iv3 r) {
		x /= r.x;
		y /= r.y;
		z /= r.z;
		return *this;
	}

	operator fv3 ();
	operator dv3 ();
};

