// generated by C:\Users\Me\Desktop\kiss\vector_srcgen\srcgen.py
#pragma once

#include "kissmath.hpp"


#include <string>

#include "fv3.hpp"

namespace vector {
	
	//// matrix forward declarations
	struct m2;
	struct m4;
	struct m2x3;
	struct m3x4;
	struct f64m3;
	
	struct m3 {
		fv3 arr[3]; // column major for compatibility with OpenGL
		
		//// Accessors
		
		// get cell with r,c indecies (r=row, c=column)
		f32 get (int r, int c) const;
		// get matrix column
		fv3 get_column (int indx) const;
		// get matrix row
		fv3 get_row (int indx) const;
		
		//// Constructors
		
		m3 ();
		// supply one value for all cells
		m3 (f32 all);
		// supply all cells, in row major order for readability -> c<r><c> (r=row, c=column)
		m3 (
				f32 c00, f32 c01, f32 c02,
				f32 c10, f32 c11, f32 c12,
				f32 c20, f32 c21, f32 c22);
		
		// static rows() and columns() methods are preferred over constructors, to avoid confusion if column or row vectors are supplied to the constructor
		// supply all row vectors
		static m3 rows (fv3 row0, fv3 row1, fv3 row2);
		// supply all cells in row major order
		static m3 rows (
				f32 c00, f32 c01, f32 c02,
				f32 c10, f32 c11, f32 c12,
				f32 c20, f32 c21, f32 c22);
		// supply all column vectors
		static m3 columns (fv3 col0, fv3 col1, fv3 col2);
		// supply all cells in column major order
		static m3 columns (
				f32 c00, f32 c10, f32 c20,
				f32 c01, f32 c11, f32 c21,
				f32 c02, f32 c12, f32 c22);
		
		// identity matrix
		static m3 identity ();
		
		// Casting operators
		
		// extend/truncate matrix of other size
		operator m2 ();
		// extend/truncate matrix of other size
		operator m4 ();
		// extend/truncate matrix of other size
		operator m2x3 ();
		// extend/truncate matrix of other size
		operator m3x4 ();
		// typecast
		operator f64m3 ();
		
		// Elementwise operators
		
		m3 operator+ (m3 m);
		m3 operator- (m3 m);
	};
	
	m3 operator+ (m3 l, m3 r);
	m3 operator- (m3 l, m3 r);
	m3 operator* (m3 l, m3 r);
	m3 operator/ (m3 l, m3 r);
} // namespace vector

