// kissmath.cpp generated by vector_srcgen.py
#include "kissmath.hpp"

//
// f32 ////////////////////////////////////////////////////////////////
f32  bezier (f32 a, f32 b, f32 c, f32 t) {
	f32 d = lerp(a, b, t);
	f32 e = lerp(b, c, t);
	f32 f = lerp(d, e, t);
	return f;
}
f32  bezier (f32 a, f32 b, f32 c, f32 d, f32 t) {
	return bezier(	lerp(a, b, t),
					lerp(b, c, t),
					lerp(c, d, t),
					t);
}
f32  bezier (f32 a, f32 b, f32 c, f32 d, f32 e, f32 t) {
	return bezier(	lerp(a, b, t),
					lerp(b, c, t),
					lerp(c, d, t),
					lerp(d, e, t),
					t);
}
//
// f64 ////////////////////////////////////////////////////////////////
f64  bezier (f64 a, f64 b, f64 c, f64 t) {
	f64 d = lerp(a, b, t);
	f64 e = lerp(b, c, t);
	f64 f = lerp(d, e, t);
	return f;
}
f64  bezier (f64 a, f64 b, f64 c, f64 d, f64 t) {
	return bezier(	lerp(a, b, t),
					lerp(b, c, t),
					lerp(c, d, t),
					t);
}
f64  bezier (f64 a, f64 b, f64 c, f64 d, f64 e, f64 t) {
	return bezier(	lerp(a, b, t),
					lerp(b, c, t),
					lerp(c, d, t),
					lerp(d, e, t),
					t);
}
//
// s8 ////////////////////////////////////////////////////////////////
//
// s32 ////////////////////////////////////////////////////////////////
//
// s64 ////////////////////////////////////////////////////////////////
//
// u8 ////////////////////////////////////////////////////////////////
//
// u32 ////////////////////////////////////////////////////////////////
//
// u64 ////////////////////////////////////////////////////////////////
