// iv2.hpp generated by vector_srcgen.py
#pragma once

#include "kissmath.hpp"

// forward declarations for conversion operators
union fv2;
union dv2;

union iv2 {
	struct {
		int	x, y;
	};
	int		arr[2];

	inline int& operator[] (int i) {
		return arr[i];
	}

	inline iv2 () {
	
	}

	inline constexpr iv2 (int all): x{all}, y{all} {
	
	}

	inline constexpr iv2 (int x, int y): x{x}, y{y} {
	
	}

	inline iv2 operator+= (iv2 r) {
		x += r.x;
		y += r.y;
		return *this;
	}
	inline iv2 operator-= (iv2 r) {
		x -= r.x;
		y -= r.y;
		return *this;
	}
	inline iv2 operator*= (iv2 r) {
		x *= r.x;
		y *= r.y;
		return *this;
	}
	inline iv2 operator/= (iv2 r) {
		x /= r.x;
		y /= r.y;
		return *this;
	}

	operator fv2 ();
	operator dv2 ();
};

