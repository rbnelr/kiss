// generated by C:\Users\Me\Desktop\kiss\vector_srcgen\srcgen.py
#pragma once

#include "kissmath.hpp"


#include <string>

#include "fv2.hpp"
#include "fv3.hpp"

namespace vector {
	
	//// matrix forward declarations
	struct fm2;
	struct fm3;
	struct fm4;
	struct fm3x4;
	struct dm2x3;
	
	struct fm2x3 {
		fv2 arr[3]; // column major for compatibility with OpenGL
		
		//// Accessors
		
		// get cell with r,c indecies (r=row, c=column)
		f32 get (int r, int c) const;
		// get matrix column
		fv2 get_column (int indx) const;
		// get matrix row
		fv3 get_row (int indx) const;
		
		//// Constructors
		
		fm2x3 ();
		// supply one value for all cells
		fm2x3 (f32 all);
		// supply all cells, in row major order for readability -> c<r><c> (r=row, c=column)
		fm2x3 (
				f32 c00, f32 c01, f32 c02,
				f32 c10, f32 c11, f32 c12);
		
		// static rows() and columns() methods are preferred over constructors, to avoid confusion if column or row vectors are supplied to the constructor
		// supply all row vectors
		static fm2x3 rows (fv3 row0, fv3 row1);
		// supply all cells in row major order
		static fm2x3 rows (
				f32 c00, f32 c01, f32 c02,
				f32 c10, f32 c11, f32 c12);
		// supply all column vectors
		static fm2x3 columns (fv2 col0, fv2 col1, fv2 col2);
		// supply all cells in column major order
		static fm2x3 columns (
				f32 c00, f32 c10,
				f32 c01, f32 c11,
				f32 c02, f32 c12);
		
		// identity matrix
		static fm2x3 identity ();
		
		// Casting operators
		
		// extend/truncate matrix of other size
		operator fm2 ();
		// extend/truncate matrix of other size
		operator fm3 ();
		// extend/truncate matrix of other size
		operator fm4 ();
		// extend/truncate matrix of other size
		operator fm3x4 ();
		// typecast
		operator dm2x3 ();
		
		// Elementwise operators
		
		fm2x3 operator+ (fm2x3 m);
		fm2x3 operator- (fm2x3 m);
	};
	
	fm2x3 operator+ (fm2x3 l, fm2x3 r);
	fm2x3 operator- (fm2x3 l, fm2x3 r);
	fm2x3 operator* (fm2x3 l, fm2x3 r);
	fm2x3 operator/ (fm2x3 l, fm2x3 r);
} // namespace vector

